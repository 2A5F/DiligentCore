name: Build NuGet package

on: [push, pull_request]

jobs:
  precheks:
    runs-on: windows-latest
    name: Win10 -> Pre-checks

    steps:
    - name: Clone repository
      uses: actions/checkout@v3

    - name: Format validation
      shell: cmd
      working-directory: ${{github.workspace}}/BuildTools/FormatValidation
      run: validate_format_win.bat


  native-build:
    needs:   precheks
    runs-on: windows-2022

    strategy:
      fail-fast: false
      matrix:
        name:            ["Win10"]
        toolset:         ["Win32", "x64"]
        build_type:      ["Debug", "Release"]
        cmake_generator: ["Visual Studio 17 2022"]
        cmake_args:      ["-DDILIGENT_BUILD_TESTS=ON -DDILIGENT_NO_VULKAN=ON -DDILIGENT_NO_OPENGL=ON -DDILIGENT_BUILD_CORE_INCLUDE_TEST=OFF"]
        platform:        ["Win32"]

    name: Win10 -> ${{ matrix.name }}-${{ matrix.toolset }}, ${{ matrix.build_type }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up build environment
      if: success()
      uses: DiligentGraphics/github-action/setup-build-env@v1
      with:
        platform:        ${{ matrix.platform }}
        cmake-generator: ${{ matrix.cmake_generator }}
        ninja-vs-arch:   ${{ matrix.toolset }}

    - name: Configure CMake
      if: success()
      uses: DiligentGraphics/github-action/configure-cmake@v1
      with:
        generator:  ${{ matrix.cmake_generator }}
        vs-arch:    ${{ matrix.toolset }}
        build-type: ${{ matrix.build_type }}
        cmake-args: ${{ matrix.cmake_args }}

    - name: Build
      id:   build
      if:   success()
      uses: DiligentGraphics/github-action/build@v1
      with:
        target: install

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      if: ${{ success() && matrix.build_type != 'Debug' }}
      with:
        name: DiligentCore-${{ matrix.name }}-${{ matrix.toolset }}-${{ matrix.build_type }}
        path: |
          ${{env.DILIGENT_INSTALL_DIR}}
          !${{env.DILIGENT_INSTALL_DIR}}/**/*.lib
          !${{env.DILIGENT_INSTALL_DIR}}/**/*.a
          ${{env.DILIGENT_BUILD_DIR}}/Tests/DiligentCoreAPITest/${{ matrix.build_type }}/*.exe
        retention-days: 90


  build-nuget-package:
    needs:   native-build
    runs-on: windows-2022

    steps:
    - name: Clone repository
      uses: actions/checkout@v3

    #- name: Extract artifacts
    #  working-directory: ${{github.workspace}}
    #  run: 
    # https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts

    - name: Install python packages
      working-directory: ${{github.workspace}}
      run: python -m pip install -r ./BuildTools/.NET/requirements.txt

    #- name: Build and run
    #  working-directory: ${{github.workspace}}
    #  run: python ./BuildTools/.NET/dotnet-build-package.py -c ${{matrix.config}} -s ./BuildTools/.NET/dotnet-build-settings.json -d ./ --dotnet-tests --free-memory
